Action编写步骤

1. 继承BaseAction

2. 在strutsXMLs/action下添加 其 XML 配置文件，并在配置文件内写好相应配置

3. 在strutsXMLs/include/include.xml中包含 在步骤 2 中添加的新的XML文件，是服务器启动时可以载入。

加入用户登录后要处理的地方

1.图片上传用户选择

2.用户管理对普通用户不可见

3.文章上传用户选择

Service编写步骤:

1. 继承BaseService

2. 在applicationContext-service.xml中配置Service

3. 在ServiceManager里编写bean

缓存相关
		CacheManager manager = CacheManager.getInstance();
		Ehcache cache = manager.getEhcache("SimplePageCachingFilter");
		cache.removeAll();
	<!-- Ehcache Filter -->
	<filter>
		<filter-name>SimplePageCachingFilter</filter-name>
		<filter-class>net.sf.ehcache.constructs.web.filter.SimplePageCachingFilter</filter-class>
		<init-param>
			<param-name>suppressStackTrace</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>cacheName</param-name>
			<param-value>SimplePageCachingFilter</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SimplePageCachingFilter</filter-name>
		<url-pattern>/index.html</url-pattern>
	</filter-mapping>
	
<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true"
	monitoring="autodetect" dynamicConfig="true">
	<diskStore path="java.io.tmpdir" />

	<cache name="SimplePageCachingFilter" maxElementsInMemory="10"
		maxElementsOnDisk="10" eternal="false" timeToLiveSeconds="120"
		timeToIdleSeconds="120" overflowToDisk="true"
		memoryStoreEvictionPolicy="LFU">
	</cache>
</ehcache>